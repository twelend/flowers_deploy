version: '3.8'

volumes:
  postgres_data: {}

services:
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    image: frontend_image
    container_name: frontend_container
    volumes:
      - ./client/:/app
    ports:
      - "3000:3000"
    env_file:
      - ./client/.env
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - mynetwork

  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    image: backend_image
    container_name: backend_container
    volumes:
      - ./server/:/app
    ports:
      - "4040:4040"
    env_file:
      - ./server/.env
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - mynetwork

  postgres:
    image: postgres:13-alpine
    container_name: postgres_container
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./server/database.sql:/docker-entrypoint-initdb.d/database.sql
    ports:
      - "5432:5432"
    env_file:
      - ./server/.env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - mynetwork

networks:
  mynetwork:
    driver: bridge
